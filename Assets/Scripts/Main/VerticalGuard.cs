//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System.Collections;

public class VerticalGuard : MonoBehaviour{

public Transform sightStart, sightEnd; //2 transforms for start and end points for the linecast
//public GameObject arrow; //arrow above the guards head for alerted status

public bool spotted, wallCollide; //bool for if player is spotted, bool for if guard is facing up/down so we can rotate
public float velocity = 2f;
public float startTime = 0f;
public float StartRandomTime = 4f;
public float EndRandomTime = 10f;
private bool goingUp = true;

void Update(){
	Movement();
	RaycastStuff();
	Behaviour();
}

void Movement(){
	Debug.Log(goingUp);
	transform.Translate (Vector3.up * 1f * Time.deltaTime);
}

void RaycastStuff() //Keep our raycast code tidy in here
{
		Debug.DrawLine(sightStart.position, sightEnd.position, Color.magenta); //just a visual representation for the linecast
		spotted = Physics2D.Linecast(sightStart.position, sightEnd.position, 1 << LayerMask.NameToLayer("Player")); //we assign the bool 'spotted' with a linecast, that returns true or false when it touches the Player
		wallCollide = Physics2D.Linecast(sightStart.position, sightEnd.position, 1 << LayerMask.NameToLayer("StaticObject"));
}

void Behaviour(){
		if(wallCollide){
				if(goingUp){
				transform.eulerAngles = new Vector2(180, 0);
				}
				else{
					transform.eulerAngles = new Vector2(0,0);
				}
				goingUp = !goingUp;
		}		
}

}